{"ast":null,"code":"var _jsxFileName = \"/Users/meika/Desktop/new-portfolio/src/components/react-projects/Tweeter/Tweeter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Nav from './Navbar';\nimport AddTwoot from './AddTwoot';\nimport EditTwoot from './EditTwoot';\nimport Twoot from './Twoot';\nimport Twoots from './Twoots';\nimport blogData from './../../../data/post_data';\nimport ReactNav from './../ReactNav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tweeter = () => {\n  _s();\n\n  const [twoots, setTwoots] = useState([]);\n  useEffect(() => {\n    setTwoots(blogData);\n  }, []);\n\n  const addTwoot = twoot => {\n    setTwoots([...twoots, twoot]);\n  };\n\n  const nextId = () => {\n    return twoots.reduce((acc, cur) => acc._id > cur._id ? acc : cur, {\n      _id: 0\n    })._id + 1;\n  };\n\n  const getTwootFromId = id => {\n    return twoots.find(t => t._id === parseInt(id));\n  };\n\n  const updateTwoot = inTwoot => {\n    const updatedTwoots = twoots.map(t => t._id === inTwoot._id ? inTwoot : t);\n    setTwoots(updatedTwoots);\n  };\n\n  const deleteTwoot = id => {\n    const updatedTwoots = twoots.filter(t => t._id !== parseInt(id));\n    setTwoots(updatedTwoots);\n  };\n\n  const heading = {\n    fontFamily: 'PT Sans',\n    fontSize: \"4rem\",\n    paddingLeft: '5%'\n  }; // const greyBg = {\n  //   backgroundColor: \"#f5f5f5\",\n  //   top: \"0\"\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: heading,\n      children: \"Tweeter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ReactNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Switch, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Tweeter, \"OpliZxyqqm4YvDrm9RkCIg0b9CQ=\");\n\n_c = Tweeter;\nexport default Tweeter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tweeter\");","map":{"version":3,"sources":["/Users/meika/Desktop/new-portfolio/src/components/react-projects/Tweeter/Tweeter.js"],"names":["React","useState","useEffect","BrowserRouter","Route","Switch","Nav","AddTwoot","EditTwoot","Twoot","Twoots","blogData","ReactNav","Tweeter","twoots","setTwoots","addTwoot","twoot","nextId","reduce","acc","cur","_id","getTwootFromId","id","find","t","parseInt","updateTwoot","inTwoot","updatedTwoots","map","deleteTwoot","filter","heading","fontFamily","fontSize","paddingLeft"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAAQC,aAAR,EAAuBC,KAAvB,EAA8BC,MAA9B,QAA2C,kBAA3C;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,QAAP,MAAqB,eAArB;;;AAIA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,SAAS,CAACJ,QAAD,CAAT;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMK,QAAQ,GAAIC,KAAD,IAAW;AAC1BF,IAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAYG,KAAZ,CAAD,CAAT;AACD,GAFD;;AAIA,QAAMC,MAAM,GAAG,MAAM;AACnB,WAAOJ,MAAM,CAACK,MAAP,CAAc,CAACC,GAAD,EAAMC,GAAN,KAAcD,GAAG,CAACE,GAAJ,GAAUD,GAAG,CAACC,GAAd,GAAoBF,GAApB,GAA0BC,GAAtD,EAA2D;AAACC,MAAAA,GAAG,EAAE;AAAN,KAA3D,EAAsEA,GAAtE,GAA4E,CAAnF;AACD,GAFD;;AAIA,QAAMC,cAAc,GAAIC,EAAD,IAAQ;AAC7B,WAAOV,MAAM,CAACW,IAAP,CAAaC,CAAD,IAAOA,CAAC,CAACJ,GAAF,KAAUK,QAAQ,CAACH,EAAD,CAArC,CAAP;AAED,GAHD;;AAKA,QAAMI,WAAW,GAAIC,OAAD,IAAa;AAC/B,UAAMC,aAAa,GAAGhB,MAAM,CAACiB,GAAP,CAAYL,CAAD,IAAQA,CAAC,CAACJ,GAAF,KAAUO,OAAO,CAACP,GAAnB,GAA0BO,OAA1B,GAAoCH,CAAtD,CAAtB;AACAX,IAAAA,SAAS,CAACe,aAAD,CAAT;AACD,GAHD;;AAKA,QAAME,WAAW,GAAIR,EAAD,IAAQ;AAC1B,UAAMM,aAAa,GAAGhB,MAAM,CAACmB,MAAP,CAAeP,CAAD,IAAOA,CAAC,CAACJ,GAAF,KAAUK,QAAQ,CAACH,EAAD,CAAvC,CAAtB;AACAT,IAAAA,SAAS,CAACe,aAAD,CAAT;AACD,GAHD;;AAKA,QAAMI,OAAO,GAAG;AACdC,IAAAA,UAAU,EAAE,SADE;AAEdC,IAAAA,QAAQ,EAAE,MAFI;AAGdC,IAAAA,WAAW,EAAE;AAHC,GAAhB,CA/BoB,CAqCpB;AACA;AACA;AACA;;AAEA,sBACE;AAAA,4BAEI;AAAI,MAAA,KAAK,EAAEH,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAIE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YALF,eASE,QAAC,aAAD;AAAA,6BAEA,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CA9DD;;GAAMrB,O;;KAAAA,O;AAgEN,eAAeA,OAAf","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport Nav from './Navbar'\nimport AddTwoot from './AddTwoot'\nimport EditTwoot from './EditTwoot'\nimport Twoot from './Twoot'\nimport Twoots from './Twoots'\nimport blogData from './../../../data/post_data'\nimport ReactNav from './../ReactNav'\n\n\n\nconst Tweeter = () => {\n\n  const [twoots, setTwoots] = useState([])\n\n  useEffect(() => {\n    setTwoots(blogData)\n  }, [])\n\n  const addTwoot = (twoot) => {\n    setTwoots([...twoots, twoot])\n  }\n\n  const nextId = () => {\n    return twoots.reduce((acc, cur) => acc._id > cur._id ? acc : cur, {_id: 0 })._id + 1\n  }\n\n  const getTwootFromId = (id) => {\n    return twoots.find((t) => t._id === parseInt(id))\n\n  }\n\n  const updateTwoot = (inTwoot) => {\n    const updatedTwoots = twoots.map((t) => (t._id === inTwoot._id) ? inTwoot : t)\n    setTwoots(updatedTwoots)\n  }\n\n  const deleteTwoot = (id) => {\n    const updatedTwoots = twoots.filter((t) => t._id !== parseInt(id))\n    setTwoots(updatedTwoots)\n  }\n\n  const heading = {\n    fontFamily: 'PT Sans',\n    fontSize: \"4rem\",\n    paddingLeft: '5%'\n  }\n\n  // const greyBg = {\n  //   backgroundColor: \"#f5f5f5\",\n  //   top: \"0\"\n  // }\n\n  return (\n    <div >\n      {/* <div style={greyBg}> */}\n        <h1 style={heading}>Tweeter</h1>\n      {/* </div> */}\n      <ReactNav />\n      <Nav />\n\n\n      \n      <BrowserRouter>\n\n      <Switch>\n        \n        \n      </Switch>\n      \n      </BrowserRouter>\n    </div>\n  )\n}\n\nexport default Tweeter"]},"metadata":{},"sourceType":"module"}