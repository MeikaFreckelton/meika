{"ast":null,"code":"var _jsxFileName = \"/Users/meika/Desktop/new-portfolio/src/components/react-projects/CookieClicker/components/PerSecond.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useGlobalState } from '../config/globalState';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PerSecond = () => {\n  _s();\n\n  const {\n    store,\n    dispatch\n  } = useGlobalState();\n  const {\n    cookieClicks,\n    autoIncrease\n  } = store;\n  const [error, setError] = useState(\"\");\n  const [disabled, setDisabled] = useState(true);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      dispatch({\n        type: \"setCookieClicks\",\n        data: cookieClicks + autoIncrease\n      });\n    }, 1000);\n    return () => {\n      clearInterval(interval);\n    };\n  });\n\n  const decrease = () => {\n    return cookieClicks - 100;\n  };\n\n  const handleClick = () => {\n    if (cookieClicks >= 100) {\n      dispatch({\n        type: \"setAutoIncrease\",\n        data: autoIncrease + 1\n      });\n      dispatch({\n        type: \"setCookieClicks\",\n        data: decrease()\n      });\n      setError(\"\");\n    } else {\n      setError(\"sorry not enough cookies!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"autoIncrease\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Automatically Increase Cookie Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Increase by \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"amount\",\n        children: autoIncrease\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }, this), \" every second\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"cookieBtns\",\n      onClick: handleClick,\n      disabled: disabled,\n      children: [\"Spend 100 cookies to increase cookies per second by \", autoIncrease]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PerSecond, \"FDydQK4j/S49NClb+VKVVnDlSIs=\", false, function () {\n  return [useGlobalState];\n});\n\n_c = PerSecond;\nexport default PerSecond;\n\nvar _c;\n\n$RefreshReg$(_c, \"PerSecond\");","map":{"version":3,"sources":["/Users/meika/Desktop/new-portfolio/src/components/react-projects/CookieClicker/components/PerSecond.js"],"names":["React","useEffect","useState","useGlobalState","PerSecond","store","dispatch","cookieClicks","autoIncrease","error","setError","disabled","setDisabled","interval","setInterval","type","data","clearInterval","decrease","handleClick"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,cAAR,QAA6B,uBAA7B;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACpB,QAAM;AAACC,IAAAA,KAAD;AAAQC,IAAAA;AAAR,MAAoBH,cAAc,EAAxC;AACA,QAAM;AAACI,IAAAA,YAAD;AAAeC,IAAAA;AAAf,MAA+BH,KAArC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,IAAD,CAAxC;AAGAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMY,QAAQ,GAAGC,WAAW,CAAC,MAAM;AAC/BR,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAE,iBADD;AAELC,QAAAA,IAAI,EAAET,YAAY,GAAGC;AAFhB,OAAD,CAAR;AAKH,KAN2B,EAMzB,IANyB,CAA5B;AAOA,WAAO,MAAM;AACbS,MAAAA,aAAa,CAACJ,QAAD,CAAb;AACC,KAFD;AAIH,GAZQ,CAAT;;AAcA,QAAMK,QAAQ,GAAG,MAAM;AACnB,WAAOX,YAAY,GAAG,GAAtB;AACH,GAFD;;AAIA,QAAMY,WAAW,GAAG,MAAM;AACtB,QAAIZ,YAAY,IAAI,GAApB,EAAwB;AACpBD,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAE,iBADD;AAELC,QAAAA,IAAI,EAAER,YAAY,GAAG;AAFhB,OAAD,CAAR;AAIAF,MAAAA,QAAQ,CAAC;AACLS,QAAAA,IAAI,EAAE,iBADD;AAELC,QAAAA,IAAI,EAAEE,QAAQ;AAFT,OAAD,CAAR;AAIAR,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACH,KAVD,MAUO;AACHA,MAAAA,QAAQ,CAAC,2BAAD,CAAR;AACH;AACJ,GAdD;;AAgBA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8CAAgB;AAAM,QAAA,SAAS,EAAC,QAAhB;AAAA,kBAA0BF;AAA1B;AAAA;AAAA;AAAA;AAAA,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAII;AAAA,gBAAKC;AAAL;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,YAAhC;AAA6C,MAAA,OAAO,EAAEU,WAAtD;AAAmE,MAAA,QAAQ,EAAER,QAA7E;AAAA,yEAA4IH,YAA5I;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAlDD;;GAAMJ,S;UACwBD,c;;;KADxBC,S;AAoDN,eAAeA,SAAf","sourcesContent":["import React, {useEffect, useState} from 'react' \nimport {useGlobalState} from '../config/globalState'\n\nconst PerSecond = () => {\n    const {store, dispatch} = useGlobalState()\n    const {cookieClicks, autoIncrease} = store\n    const [error, setError] = useState(\"\")\n    const [disabled, setDisabled] = useState(true)\n\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            dispatch({\n                type: \"setCookieClicks\",\n                data: cookieClicks + autoIncrease\n            })\n\n        }, 1000)\n        return () => {\n        clearInterval(interval);\n        };\n    \n    })\n    \n    const decrease = () => {\n        return cookieClicks - 100\n    }\n\n    const handleClick = () => {\n        if (cookieClicks >= 100){\n            dispatch({\n                type: \"setAutoIncrease\",\n                data: autoIncrease + 1\n            })\n            dispatch({\n                type: \"setCookieClicks\",\n                data: decrease()\n            })\n            setError(\"\")\n        } else {\n            setError(\"sorry not enough cookies!\")\n        }\n    }\n\n    return(\n        <div className=\"autoIncrease\">\n            <h2>Automatically Increase Cookie Count</h2>\n            <h3>Increase by <span className=\"amount\">{autoIncrease}</span> every second</h3>\n\n            <h4>{error}</h4>\n            <button type=\"button\" className=\"cookieBtns\" onClick={handleClick} disabled={disabled}>Spend 100 cookies to increase cookies per second by {autoIncrease}</button>\n        </div>\n    )\n}\n\nexport default PerSecond"]},"metadata":{},"sourceType":"module"}