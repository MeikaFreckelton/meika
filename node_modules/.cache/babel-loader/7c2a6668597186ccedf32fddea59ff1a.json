{"ast":null,"code":"var _jsxFileName = \"/Users/meika/Desktop/new-portfolio/src/components/react-projects/ToDoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactNav from './ReactNav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ToDoList = () => {\n  _s();\n\n  const [toDoList, updateToDoList] = useState([// set state for list\n  {\n    text: \"learn about react\",\n    isCompleted: false\n  }, {\n    text: \"build react project\",\n    isCompleted: false\n  }]);\n  const [value, setValue] = useState(\"\"); // set state for list item\n\n  const completeTodo = index => {\n    const newTodos = [...toDoList];\n    newTodos[index].isCompleted = true;\n    updateToDoList(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...toDoList];\n    newTodos.splice(index, 1);\n    updateToDoList(newTodos);\n  };\n\n  function Todo({\n    todo,\n    index,\n    completeTodo,\n    removeTodo,\n    number\n  }) {\n    // get text from list item\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo\",\n      style: {\n        textDecoration: todo.isCompleted ? \"line-through\" : \"\"\n      },\n      children: [number, \". \", todo.text, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => removeTodo(index),\n          children: \"x\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => completeTodo(index),\n          children: \"done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 73\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 130\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n  const listSubmitHandler = newItem => {\n    // handle submit\n    newItem.preventDefault();\n    if (!value) return;\n    addTodo(value); // add to todos\n\n    setValue(\"\"); //clear value\n  };\n\n  const addTodo = text => {\n    const newTodos = [...toDoList, {\n      text\n    }];\n    updateToDoList(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ReactNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heading\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"formDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: listSubmitHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          value: value,\n          placeholder: \"New to-do...\",\n          onChange: e => setValue(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"add\",\n          className: \"add-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoItems\",\n      children: toDoList.map((todo, index) => /*#__PURE__*/_jsxDEV(Todo, {\n        index: index,\n        number: index + 1,\n        todo: todo,\n        completeTodo: completeTodo,\n        removeTodo: removeTodo\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ToDoList, \"M7F3dLgfuoktcwSnLRpTj3zHU8Y=\");\n\n_c = ToDoList;\nexport default ToDoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"sources":["/Users/meika/Desktop/new-portfolio/src/components/react-projects/ToDoList.js"],"names":["React","useState","ReactNav","ToDoList","toDoList","updateToDoList","text","isCompleted","value","setValue","completeTodo","index","newTodos","removeTodo","splice","Todo","todo","number","textDecoration","listSubmitHandler","newItem","preventDefault","addTodo","e","target","map"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport ReactNav from './ReactNav'\n\n\nconst ToDoList = () => {\n\n    const [toDoList, updateToDoList] = useState([ // set state for list\n        {\n            text: \"learn about react\",\n            isCompleted: false\n        },\n        {\n            text: \"build react project\",\n            isCompleted: false\n        }, \n    ])\n    const [value, setValue] = useState(\"\") // set state for list item\n\n    const completeTodo = index => {\n        const newTodos = [...toDoList]\n        newTodos[index].isCompleted = true\n        updateToDoList(newTodos)\n    }\n\n    const removeTodo = index => {\n        const newTodos = [...toDoList]\n        newTodos.splice(index, 1)\n        updateToDoList(newTodos)\n\n    }\n\n    function Todo({todo, index, completeTodo, removeTodo, number}){ // get text from list item\n        return(\n            <div className=\"todo\" style={{textDecoration: todo.isCompleted ? \"line-through\" : \"\"}}>\n                {number}. {todo.text}\n                <div className=\"buttons\">\n                    <button onClick={() => removeTodo(index)}>x</button><button onClick={() => completeTodo(index)}>done</button><button>edit</button>\n                </div>\n                \n            </div>\n        )\n    }\n\n    \n\n    const listSubmitHandler = (newItem) => { // handle submit\n        \n        newItem.preventDefault()\n        if (!value) return\n        addTodo(value) // add to todos\n        setValue(\"\") //clear value\n    }\n\n    const addTodo = text => {\n        const newTodos = [...toDoList, { text }]\n        updateToDoList(newTodos)\n    }\n\n\n\n\n\n\n\n\n    return(\n        <div>\n            <ReactNav />\n            <div className=\"heading\" >\n                <h1>To Do List</h1>\n            </div>\n            <div id=\"formDiv\">\n\n                <form onSubmit={listSubmitHandler}>\n                <input\n                    type=\"text\"\n                    className=\"input\"\n                    value={value}\n                    placeholder=\"New to-do...\"\n                    onChange={e => setValue(e.target.value)}\n                />\n                <input type=\"submit\" value=\"add\" className=\"add-btn\"/>\n                </form>\n            </div>\n\n            <div className=\"todoItems\">\n                {toDoList.map((todo, index) => (\n                    <Todo\n                        key={index}\n                        index={index}\n                        number={index + 1}\n                        todo={todo}\n                        completeTodo = {completeTodo}\n                        removeTodo = {removeTodo}\n                    />\n                ))}\n            </div>\n        </div>\n    )\n}\n\n\nexport default ToDoList"]},"metadata":{},"sourceType":"module"}