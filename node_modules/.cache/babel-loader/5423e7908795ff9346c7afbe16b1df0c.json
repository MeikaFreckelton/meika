{"ast":null,"code":"var _jsxFileName = \"/Users/meika/Desktop/new-portfolio/src/components/react-projects/Tweeter/EditTwoot.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactNav from './../ReactNav';\nimport Nav from './Navbar'; // Edit the Twoot - Remember to allow the passing of an id here\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst EditTwoot = ({\n  history,\n  updateTwoot,\n  twoot\n}) => {\n  _s();\n\n  const [formState, setFormState] = useState({}); // const divStyles = {\n  //     display: \"grid\",\n  //     // width: \"100vw\"\n  // }\n\n  const inputStyles = {\n    width: \"70vw\",\n    margin: \".5em\"\n  };\n  const labelStyles = {\n    fontSize: \"1.2em\"\n  };\n  const textAreaStyles = {\n    height: \"200px\",\n    margin: \".5em\",\n    width: \"70vw\"\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const updatedTwoot = {\n      _id: twoot._id,\n      title: formState.title,\n      category: formState.category || \"general\",\n      modified_date: new Date(),\n      content: formState.content\n    };\n    updateTwoot(updatedTwoot);\n    history.push(`/tweeter/twoot/${twoot._id}`);\n  };\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormState({ ...formState,\n      [name]: value\n    });\n  };\n\n  useEffect(() => {\n    // Set the formState to the fields in the post after mount and when post changes\n    twoot && setFormState({\n      title: twoot.title,\n      category: twoot.category,\n      content: twoot.content\n    });\n  }, [twoot]);\n  const heading = {\n    fontFamily: 'PT Sans',\n    fontSize: \"4rem\",\n    paddingLeft: '5%'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ReactNav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: heading,\n        children: \"Tweeter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"editPostForm\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"edit twoot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: labelStyles,\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            style: inputStyles,\n            required: true,\n            name: \"title\",\n            value: formState.title,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: labelStyles,\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            style: inputStyles,\n            required: true,\n            name: \"category\",\n            value: formState.category,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            style: labelStyles,\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            form: \"newPostForm\",\n            style: textAreaStyles,\n            required: true,\n            name: \"content\",\n            value: formState.content,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Update Twoot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n\n_s(EditTwoot, \"7jDGCATJxwgonKv440CxmleAFxc=\");\n\n_c = EditTwoot;\nexport default EditTwoot;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditTwoot\");","map":{"version":3,"sources":["/Users/meika/Desktop/new-portfolio/src/components/react-projects/Tweeter/EditTwoot.js"],"names":["React","useState","useEffect","ReactNav","Nav","EditTwoot","history","updateTwoot","twoot","formState","setFormState","inputStyles","width","margin","labelStyles","fontSize","textAreaStyles","height","handleSubmit","e","preventDefault","updatedTwoot","_id","title","category","modified_date","Date","content","push","handleChange","name","value","target","heading","fontFamily","paddingLeft"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport ReactNav from './../ReactNav'\nimport Nav from './Navbar'\n\n// Edit the Twoot - Remember to allow the passing of an id here\n\nconst EditTwoot = ({history, updateTwoot, twoot, }) => {\n\n    const [formState, setFormState] = useState({})\n\n    // const divStyles = {\n    //     display: \"grid\",\n    //     // width: \"100vw\"\n    // }\n    const inputStyles = {\n        width: \"70vw\",\n        margin: \".5em\"\n    }\n    const labelStyles = {\n        fontSize: \"1.2em\"\n    }\n    const textAreaStyles = {\n        height: \"200px\",\n        margin: \".5em\",\n        width: \"70vw\"\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const updatedTwoot = {\n            _id: twoot._id,\n            title: formState.title,\n            category: formState.category || \"general\",\n            modified_date: new Date(),\n            content: formState.content\n        }\n        updateTwoot(updatedTwoot)\n        history.push(`/tweeter/twoot/${twoot._id}`)\n\n    }\n\n    const handleChange = (e) => {\n        const {name, value} = e.target\n        setFormState({\n            ...formState,\n            [name]: value\n        })\n    }\n\n    useEffect(() => {\n        // Set the formState to the fields in the post after mount and when post changes\n        twoot && setFormState({\n            title: twoot.title,\n            category: twoot.category,\n            content: twoot.content\n        })\n    },[twoot])\n\n    const heading = {\n        fontFamily: 'PT Sans',\n        fontSize: \"4rem\",\n        paddingLeft: '5%'\n    }\n\n    return (\n        <div>\n            <div>\n\n                <ReactNav />\n                <h1 style={heading}>Tweeter</h1>    \n                <Nav />\n            </div>\n\n\n            <div id=\"editPostForm\">\n                <h1>edit twoot</h1>\n\n            {/* <h1>add twoot</h1> */}\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label style={labelStyles}>Title</label>\n                    <input\n                    type=\"text\"\n                    style={inputStyles}\n                    required\n                    name=\"title\"\n                    value={formState.title}\n                    onChange={handleChange}\n                    />\n\n\n                </div>\n                <div>\n                    <label style={labelStyles}>Category</label>\n                    <input\n                    type=\"text\"\n                    style={inputStyles}\n                    required\n                    name=\"category\"\n                    value={formState.category}\n                    onChange={handleChange}\n                    />\n                    \n\n                </div>\n                <div>\n                    <label style={labelStyles}>Content</label>\n                    <textarea\n                    form=\"newPostForm\"\n                    style={textAreaStyles}\n                    required\n                    name=\"content\"\n                    value={formState.content}\n                    onChange={handleChange}\n                    />\n                    \n\n                </div>\n                <input type=\"submit\" value=\"Update Twoot\"></input>\n\n\n            </form>\n        </div>\n        </div>\n    )\n}\n\n\nexport default EditTwoot"]},"metadata":{},"sourceType":"module"}